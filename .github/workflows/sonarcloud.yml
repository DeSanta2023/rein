name: SonarCloud analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  sonar-check:
    name: Sonar Check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 1) BEGIN: SonarScanner for .NET
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner --version 9.0.4
        shell: pwsh

      - name: SonarScanner Begin
        run: |
          dotnet sonarscanner begin `
            /k:"ppanchen_NetSdrClient" `
            /o:"ppanchen" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.xml" `
            /d:sonar.exclusions=**/bin/**,**/obj/**,**/.github/** `
            /d:sonar.qualitygate.wait=true
        shell: pwsh

      # 2) BUILD & TEST
      - name: Restore dependencies
        run: dotnet restore NetSdrClient.sln

      - name: Build
        run: dotnet build NetSdrClient.sln -c Release --no-restore

      - name: Run tests with coverage
        run: |
          dotnet test NetSdrClientAppTests/NetSdrClientAppTests.csproj -c Release --no-build `
            /p:CollectCoverage=true `
            /p:CoverletOutput=TestResults/ `
            /p:CoverletOutputFormat=opencover
        shell: pwsh

      # 3) END: SonarScanner
      - name: SonarScanner End
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        shell: pwsh
